/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ProyectoConcurrente;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class VerProductos extends javax.swing.JInternalFrame {

    public VerProductos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabelTituloDetalleProductos = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Productos");
        setToolTipText("");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jTable1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Items", "Compañía", "Tamaño", "Precio/Pieza en Colones", "Cantidad"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(50, 100, 970, 500);

        jPanel1.setBackground(new java.awt.Color(2, 126, 96));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelTituloDetalleProductos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelTituloDetalleProductos.setForeground(new java.awt.Color(236, 240, 241));
        jLabelTituloDetalleProductos.setText("Detalle de Productos");
        jPanel1.add(jLabelTituloDetalleProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 20, 130, 30));

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1070, 70);

        setBounds(0, 0, 1065, 667);
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
    }//GEN-LAST:event_formInternalFrameActivated

private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
    String path = "jdbc:mysql://localhost/";
    String place = "ulacitProyecto";
    try {
        Class.forName("com.mysql.jdbc.Driver");
        Connection myconnection = DriverManager.getConnection(path + place, "root", "");
        String item, categoria, subcategoria, precios, cantidad;
        try {
            String q = "SELECT * FROM productos";
            PreparedStatement mystatement = myconnection.prepareStatement(q);
            DefaultTableModel mymodel = (DefaultTableModel) jTable1.getModel();
            ResultSet myresult = mystatement.executeQuery();
            if (myresult.next()) {
                do {
                    item = myresult.getString("items");
                    categoria = myresult.getString("categoria");
                    subcategoria = myresult.getString("subcategoria");
                    precios = myresult.getString("precios");
                    cantidad = myresult.getString("cantidad");
                    mymodel.addRow(new Object[]{item, categoria, subcategoria, precios, cantidad});
                } while (myresult.next());
            } else {
                JOptionPane.showMessageDialog(rootPane, "No existen registros");

            }

            mystatement.close();
            myconnection.close();

        } catch (Exception ae) {
            JOptionPane.showMessageDialog(rootPane, "Error " + ae.getMessage());
        }
    } catch (Exception ae) {
        JOptionPane.showMessageDialog(rootPane, "Error en conexión" + ae.getMessage());
    }
}//GEN-LAST:event_formInternalFrameOpened
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelTituloDetalleProductos;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
