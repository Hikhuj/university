/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ProyectoConcurrente;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class ActualizarProducto extends javax.swing.JInternalFrame {


    public ActualizarProducto() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        itembox = new javax.swing.JTextField();
        jLabelPrecioPieza = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        jPrecioPieza = new javax.swing.JTextField();
        jComboCompania = new javax.swing.JComboBox();
        jLabelTamanio = new javax.swing.JLabel();
        jComboTamanio = new javax.swing.JComboBox();
        jLabelItem = new javax.swing.JLabel();
        btnActualizar = new javax.swing.JButton();
        jLabelCompania = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabelCantidad = new javax.swing.JLabel();
        cantidadPiezasItem = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Precios de Productos");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        itembox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemboxActionPerformed(evt);
            }
        });
        getContentPane().add(itembox);
        itembox.setBounds(30, 100, 140, 30);

        jLabelPrecioPieza.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelPrecioPieza.setText("Precio/Pieza");
        getContentPane().add(jLabelPrecioPieza);
        jLabelPrecioPieza.setBounds(530, 70, 90, 30);

        btnBuscar.setBackground(new java.awt.Color(2, 126, 96));
        btnBuscar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(236, 240, 241));
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscar);
        btnBuscar.setBounds(30, 150, 90, 30);

        jPrecioPieza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPrecioPiezaActionPerformed(evt);
            }
        });
        getContentPane().add(jPrecioPieza);
        jPrecioPieza.setBounds(530, 100, 90, 30);

        jComboCompania.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Elegir Categoría" }));
        jComboCompania.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboCompaniaActionPerformed(evt);
            }
        });
        getContentPane().add(jComboCompania);
        jComboCompania.setBounds(180, 100, 150, 30);

        jLabelTamanio.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelTamanio.setText("Tamaño");
        getContentPane().add(jLabelTamanio);
        jLabelTamanio.setBounds(390, 70, 70, 30);

        jComboTamanio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Elegir Subcategoria", " " }));
        jComboTamanio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboTamanioActionPerformed(evt);
            }
        });
        getContentPane().add(jComboTamanio);
        jComboTamanio.setBounds(340, 100, 160, 30);

        jLabelItem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelItem.setText("Item");
        getContentPane().add(jLabelItem);
        jLabelItem.setBounds(80, 70, 80, 30);

        btnActualizar.setBackground(new java.awt.Color(2, 126, 96));
        btnActualizar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnActualizar.setForeground(new java.awt.Color(236, 240, 241));
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        getContentPane().add(btnActualizar);
        btnActualizar.setBounds(140, 150, 90, 30);

        jLabelCompania.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelCompania.setText("Compañía");
        getContentPane().add(jLabelCompania);
        jLabelCompania.setBounds(200, 70, 120, 30);

        jTable1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Items", "Categoria", "Tamaño", "Precio/Pieza", "Cantidad"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 210, 750, 180);

        jLabelCantidad.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelCantidad.setText("Cantidad");
        getContentPane().add(jLabelCantidad);
        jLabelCantidad.setBounds(680, 70, 70, 30);

        cantidadPiezasItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cantidadPiezasItemActionPerformed(evt);
            }
        });
        getContentPane().add(cantidadPiezasItem);
        cantidadPiezasItem.setBounds(660, 100, 100, 30);

        jPanel1.setBackground(new java.awt.Color(2, 126, 96));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel36.setBackground(new java.awt.Color(236, 240, 241));
        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(236, 240, 241));
        jLabel36.setText("Actualizar Productos");
        jPanel1.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 130, 30));

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 800, 60);

        setBounds(0, 0, 804, 454);
    }// </editor-fold>//GEN-END:initComponents

    private void itemboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemboxActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed




        jPrecioPieza.setText("");
        jComboCompania.setSelectedIndex(0);
        jComboTamanio.setSelectedIndex(0);
        cantidadPiezasItem.setText("");


        String path = "jdbc:mysql://localhost/";
        String place = "ulacitProyecto";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection myconnection = DriverManager.getConnection(path + place, "root", "");
            String item, categoria, subcategoria, precios, categorias;
            try {
                String q = "SELECT * FROM productos WHERE items like '%" + itembox.getText() + "%'";
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                DefaultTableModel mymodel = (DefaultTableModel) jTable1.getModel();
                ResultSet myresult = mystatement.executeQuery();
                mymodel.setRowCount(0);
                jScrollPane1.setVisible(true);
                if (myresult.next()) {
                    do {
                        item = myresult.getString("items");
                        categoria = myresult.getString("categoria");
                        subcategoria = myresult.getString("subcategoria");
                        precios = myresult.getString("precios");
                        categorias = myresult.getString("categorias");
                        mymodel.addRow(new Object[]{item, categoria, subcategoria, precios, categorias});
                        jScrollPane1.setVisible(true);
                    } while (myresult.next());
                } else {
                    jScrollPane1.setVisible(false);
                    JOptionPane.showMessageDialog(rootPane, "No existe registro");
                }
                mystatement.close();
                myconnection.close();

            } catch (Exception ae) {
                JOptionPane.showMessageDialog(rootPane, "No existe registro");
            }
        } catch (Exception ae) {
            JOptionPane.showMessageDialog(rootPane, "Error en la conexión" + ae.getMessage());
        }
       }//GEN-LAST:event_btnBuscarActionPerformed

    private void jPrecioPiezaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPrecioPiezaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPrecioPiezaActionPerformed

    private void jComboCompaniaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboCompaniaActionPerformed
        String path = "jdbc:mysql://localhost/";
        String place = "ulacitProyecto";
        if (jComboCompania.getSelectedIndex() > 0) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection myconnection = DriverManager.getConnection(path + place, "root", "");

                try {
                    String q = "SELECT subacategoria FROM categoria WHERE categoria1=?";
                    PreparedStatement mystatement = myconnection.prepareStatement(q);
                    mystatement.setString(1, jComboCompania.getSelectedItem().toString());
                    ResultSet myresult = mystatement.executeQuery();
                    jComboTamanio.removeAllItems();
                    if (myresult.next()) {
                        jComboTamanio.addItem("Elegir tipo");
                        do {
                            jComboTamanio.addItem(myresult.getString("Subcategoria"));
                        } while (myresult.next());
                    }
                    mystatement.close();
                    myconnection.close();

                } catch (Exception ae) {
                    JOptionPane.showMessageDialog(rootPane, "Resultado no encontrado");
                }
            } catch (Exception ae) {
                JOptionPane.showMessageDialog(rootPane, "Error en conexion" + ae.getMessage());
            }
        }          // TODO add your handling code here:
    }//GEN-LAST:event_jComboCompaniaActionPerformed

    private void jComboTamanioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboTamanioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboTamanioActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        String path = "jdbc:mysql://localhost/";
        String place = "ulacitProyecto";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection myconnection = DriverManager.getConnection(path + place, "root", "");
            try {
                String q = "SELECT * FROM compania";
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                ResultSet myresult = mystatement.executeQuery();
                if (myresult.next()) {
                    do {
                        jComboCompania.addItem(myresult.getString("compania"));
                    } while (myresult.next());
                }
                jScrollPane1.setVisible(false);
                mystatement.close();
                myconnection.close();

            } catch (Exception ae) {
                JOptionPane.showMessageDialog(rootPane, "No existe registro");
            }
        } catch (Exception ae) {
            JOptionPane.showMessageDialog(rootPane, "Error en conexion" + ae.getMessage());
        }

    }//GEN-LAST:event_formInternalFrameActivated

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        String path = "jdbc:mysql://localhost/";
        String place = "ulacitProyecto";
        int i = JOptionPane.showConfirmDialog(rootPane, "¿Esta seguro que desea actualizar este item?");
        if (i == 0) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection myconnection = DriverManager.getConnection(path + place, "root", "");
                try {
                    String q = "UPDATE productos SET precios=?,categoria=?,subcategoria=?,cantidad=? WHERE items=?";
                    PreparedStatement mystatement = myconnection.prepareStatement(q);
                    mystatement.setString(1, jPrecioPieza.getText());
                    mystatement.setString(2, jComboCompania.getSelectedItem().toString());
                    mystatement.setString(3, jComboTamanio.getSelectedItem().toString());
                    mystatement.setString(4, cantidadPiezasItem.getText());
                    mystatement.setString(5, itembox.getText());
                    mystatement.execute();

                    JOptionPane.showMessageDialog(rootPane, "Actualizacion existosa");

                    itembox.setText("");
                    btnBuscarActionPerformed(null);
                    mystatement.close();

                    myconnection.close();
                } catch (Exception ae) {
                    JOptionPane.showMessageDialog(rootPane, "Error en consulta" + ae.getMessage());
                }
            } catch (Exception ae) {
                JOptionPane.showMessageDialog(rootPane, "Error en conexión" + ae.getMessage());
            }
        }
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection myconnection = DriverManager.getConnection(path + place, "root", "");
            String item, categoria, subcategoria, precios, cantidad;
            try {
                String q = "SELECT * FROM productos WHERE items like '%" + itembox.getText() + "%'";
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                DefaultTableModel mymodel = (DefaultTableModel) jTable1.getModel();
                mymodel.fireTableDataChanged();
                ResultSet myresult = mystatement.executeQuery();
                mymodel.setRowCount(0);
                if (myresult.next()) {
                    do {
                        item = myresult.getString("items");
                        categoria = myresult.getString("category");
                        subcategoria = myresult.getString("subcategory");
                        precios = myresult.getString("rates");
                        cantidad = myresult.getString("quantity");
                        mymodel.addRow(new Object[]{item, categoria, subcategoria, precios, cantidad});
                    } while (myresult.next());
                }
                mystatement.close();
                myconnection.close();

            } catch (Exception ae) {
                JOptionPane.showMessageDialog(rootPane, "No existen registros");
            }
        } catch (Exception ae) {
            JOptionPane.showMessageDialog(rootPane, "Error en conexión" + ae.getMessage());
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int myrow = jTable1.getSelectedRow();

        String data = (String) jTable1.getValueAt(myrow, 0);
        String path = "jdbc:mysql://localhost/";
        String place = "ulacitProyecto";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection myconnection = DriverManager.getConnection(path + place, "root", "");
            try {
                String q = "SELECT * FROM productos WHERE items=?";
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                mystatement.setString(1, data);
                ResultSet myresult = mystatement.executeQuery();
                if (myresult.next()) {
                    itembox.setText(myresult.getString("items"));
                    jPrecioPieza.setText(myresult.getString("precios"));
                    jComboCompania.setSelectedItem(myresult.getString("categoria"));
                    jComboTamanio.setSelectedItem(myresult.getString("subcategorias"));
                    cantidadPiezasItem.setText(myresult.getString("cantidades"));
                }
                mystatement.close();
                myconnection.close();

            } catch (Exception ae) {
                JOptionPane.showMessageDialog(rootPane, "Error en consulta " + ae.getMessage());
            }
        } catch (Exception ae) {
            JOptionPane.showMessageDialog(rootPane, "Error en conexión" + ae.getMessage());
        }


    }//GEN-LAST:event_jTable1MouseClicked

    private void cantidadPiezasItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cantidadPiezasItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cantidadPiezasItemActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        jScrollPane1.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameOpened
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JTextField cantidadPiezasItem;
    private javax.swing.JTextField itembox;
    private javax.swing.JComboBox jComboCompania;
    private javax.swing.JComboBox jComboTamanio;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabelCantidad;
    private javax.swing.JLabel jLabelCompania;
    private javax.swing.JLabel jLabelItem;
    private javax.swing.JLabel jLabelPrecioPieza;
    private javax.swing.JLabel jLabelTamanio;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jPrecioPieza;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
